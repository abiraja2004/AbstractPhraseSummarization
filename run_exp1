#generated the data, if necessary
	#prepare the Senna Input
	#python get_senna_input.py

	#Run the Senna Parser
	#cmd /C "runSenna.bat"

	#generate the files
	#python ILP_Prepare.py

#Extractive Orcale
	#python OracleExperiment.py

#ILP oracle
	#python ILP_Supervised.py
	#python ILP_GetRouge.py "../../data/ILP_Sentence_Supervised_Oracle/"

#unsupervised ILP baseline
	#python ILP_baseline.py
	#python ILP_GetRouge.py "../../data/ILP1_Sentence/"

#unsupervised ILP + matrix completion
	#get matrix completion
	#python ILP_MC.py
	#python ILP_GetRouge.py "../../data/ILP1_Sentence_MC/"

#clean the log files
#./clean
	
#supervised ILP + feature weighting
	#get features
	#python ILP_FeatureExtraction.py
	#python ILP_Supervised_FeatureWeight.py
	#python ILP_GetRouge.py "../../data/ILP_Sentence_Supervised_FeatureWeighting/"
	#python ILP_Supervised_FeatureWeight_AveragePerceptron.py
	
	#python ILP_Supervised_FeatureWeight_LCS.py
	#python ILP_Supervised_FeatureWeight_MC_LCS.py
	
#supervised ILP + feature weighting + matrix completion
	#python ILP_Supervised_FeatureWeight_MC.py
	#python ILP_GetRouge.py "../../data/ILP_Sentence_Supervised_FeatureWeightingMC/"
	#python ILP_GetRouge.py "../../data/ILP_Sentence_Supervised_FeatureWeightingAveragePerceptronMC/"
	
	python ILP_Supervised_FeatureWeight_MC_AveragePerceptron.py
	
#gather the ROUGE scores
